New in IguanaTex 1.62 (December 3, 2024)
- (Win/Mac) Added support for Tectonic (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/63)
- (Win/Mac) Allowed for custom prefix for LaTeX commands instead of only a folder specifying a path. This for example allows using a LaTeX installation under the Windows Subsystem for Linux via the prefix `wsl -e ` (because wsl does not support quotes around the command, it is treated as a special case). (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/64)
- (Win/Mac) Added button to directly generate from file without first loading into the edit window. File path in editor window's "Read from file" is now also stored when clicking "Make Default". Created macro "LoadDefaultFileAndGenerate" to generate display from default file (enables 1-click generation from file by adding macro to Quick Access Toolbar, currently only on Windows due to Microsoft bug on Mac). (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/66 and https://github.com/Jonathan-LeRoux/IguanaTex/issues/67)
- (Win/Mac) Added option to set a Fill color for Shape objects in the editor window. The color is stored when clicking "Make Default". (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/68)
- (Win/Mac) Added ability to export/import settings to/from XML (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/71)
- (Win/Mac) Added test to make sure that the temporary file IguanaTex_tmp.tex can be created, to avoid raising an error (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/77)
- (Win/Mac) Only settings that are currently visible and active in the Editor window now get saved when clicking "Make Default" (all used to be saved).
- (Win/Mac) Added pop-ups (i.e., ControlTipText) to some buttons to remind the user about associated keyboard shortcut (i.e., Accelerator); fixed order of items when using Tab in Main Settings.
- (Win/Mac) Update some default paths
- (Mac) Fixed editor window size not being saved when clicking "Make default". The editor window size can also be set in the Main Settings on Mac.
- (Mac) Automatically reset Temp folder path to default if path is set to empty

New in IguanaTex 1.61 (March 27, 2024)
- (Win/Mac) Changed Bitmap/Vector naming to Picture/Shape, to reflect the actual difference in how PowerPoint handles each type of display. The naming also better suits the fact that Picture displays on Mac are PDF and thus cannot be described as Bitmap. (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/41)
- (Win/Mac) Raise an error if user tries to use a combination of engine and output which requires ImageMagick without its path pointing to a file that exists (i.e., PNG output with all engines other than "latex (DVI)").
- (Mac) Implemented PNG support for Mac
- (Mac) Added option in Main Settings to specify extra path(s) to handle packages that require external executables such as pygmentize (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/55)
- (Win/Mac) Added option in Main Settings to decide whether to include Alternative Text or not
- (Win/Mac) Fixed bug that could occur when using dvipng and there exists already a PNG file from a prior run.
- (Win/Mac) Improved handling of error when PowerPoint version does not support conversion of SVG to Shape. (somewhat fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/54)
- (Win/Mac) Fixed bugs in the Load Vector Graphics File function: it was impossible to load DVI/XDV files, and they would not have been processed correctly anyway; options for post-processing in the EMF conversion case were incorrectly disabled.

New in IguanaTex 1.60.3 (October 13, 2023)
- (Win/Mac) Fixed bug where extracting a LaTeXiT display (or simply checking if a display was created with LaTeXiT) would replace the clipboard text
- (Win/Mac) Fixed bug that resulted in unnecessarily checking if every display in a slide is a LaTeX display. This resulted in significant slowdowns particularly when checking for potential LaTeXiT displays is enabled. Code will now only check when necessary, and when necessary will only check the first time it encounters a given display.

New in IguanaTex 1.60.2 (August 8, 2022)
- (Win) Fixed bug occurring when using the Insert Vector Graphics File function with a presentation in a OneDrive/SharePoint directory

New in IguanaTex 1.60.1 (May 26, 2022)
- (Win/Mac) Fixed bug that would occur when no slide is selected
- (Win) Fixed bug that prevented the add-in from running on 32 bit Windows
- (Win) Changed default ImageMagick executable to magick.exe
- (Mac) Moved back to using a very thin margin on Bitmap/PDF displays on Mac. This results in the displays being cropped when viewed on Windows, but at least the size is consistent, and Windows users can "regenerate" the display in PNG at the right size by using the "rasterize" function.

New in IguanaTex 1.60 (May 20, 2022)
- (Win/Mac) Changed Main Settings icon so that it works also on Mac (ControlsGallery icon is not available on Office for Mac, switched to ControlToolboxOutlook)
- (Win/Mac) Replaced CDbl by Val in bounding box computation (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/18)
- (Win/Mac) Implemented SVG generation via XDV/DVI file with dvisvgm (the original PDF->SVG vector route is still available as another option). This circumvents issue with some symbols when converting to SVG via PDF (https://github.com/Jonathan-LeRoux/IguanaTex/issues/22). Added ControlTipText in Main Settings menu recommending the SVG via DVI route. Note that I considered adding more general support for XDV/DVI for xelatex, lualatex, and platex, but there is no good way to convert straight to PNG for the XDV/DVI files generated by these engines. Note also that platex already goes through DVI to generate PDF (and then PNG/EMF/SVG).
- (Win/Mac) Added DVI/XDV support when loading vector graphics files
- (Win/Mac) Refactored and simplified compilation pipeline.
- (Win/Mac) Fixed bug when loading EPS file.
- (Win/Mac) Made the "Close/Continue" button in the Error/Debug window the default selected button. As as side-effect, it is now clearer on Mac that clicking the "Copy" button is having an effect because the button becomes selected. Unfortunately, command buttons do not appear depressed when clicked on Mac, and because "Copy" does not have any visible effect, it wasn't clear that it was working.
- (Win/Mac) Fixed bug that lead to resize issues when a display's file format changed to another during regeneration (e.g., PDF<->PNG)
- (Win/Mac) On Windows, updated instructions regarding setting ImageMagick's path to magick.exe instead of convert.exe; on Mac, removed irrelevant reference in the Readme's instructions and removed the path selection in the Main Settings.
- (Mac) Enabled copy, cut, paste, select all, undo, redo globally in all text forms, via usual Command+Key keyboard shortcuts (This is a major feat, thanks Tsung-Ju!!)
- (Mac) Enabled shortcuts/accelerators on Mac. The accelerators are mapped to “ctrl+cmd+*” to avoid collision with system shortcuts. (Another major feat, thanks Tsung-Ju!!)
- (Mac) Changed default path for LaTeXiT-metadata application on Mac to  /Library/Application Support/Microsoft/Office365/User Content.localized/Add-Ins.localized/LaTeXiT-metadata-macos, and added test for its existence if the file is under that folder. We do not check otherwise because this would trigger a permission request.
- (Mac) Debug option on Mac now shows command that will be run and offers the user to copy it, similarly to Windows. The only remaining difference is that the output of each run is only shown on Windows, not Mac.
- (Win) Added proper unicode support for strings saved to the registry (fixes https://github.com/Jonathan-LeRoux/IguanaTex/issues/17). 
- (Win) Automatically replace gswin32.exe/gswin64.exe with gswin32c.exe/gswin64c.exe (with a "c")
- (Win) Removed https://github.com/Jonathan-LeRoux/IguanaTex/blob/87f5b079812c75479641f55e15ac2166c94a0016/LatexForm.frm#L161 to allow use of LaTeX installations that do not rely on .exe binaries

New in IguanaTex 1.59.1 (February 17, 2022)
- (Mac) Add-in is now M1 compatible (new dylib, fixed bug in TextWindowFont)

New in IguanaTex 1.59 (April 25, 2021)
- Added Mac support: 
  * integrated original Mac port by Tsung-Ju Chiang (https://github.com/ray851107/IguanaTexMac) into latest Windows code, leading to single code base supporting both platforms.
  * fixed minor issues with original Mac port: made UserForms appear the same size as on Windows (they used to be 3/4 smaller) and tweaked labels so that no text gets truncated; removed Accelerators, which are not implemented on VBA for Mac; ...
  * replaced PNG with PDF for "Bitmap" on Mac (except when selecting DVIPNG compilation route): PDFs are inserted as pictures on Mac, even though they're really vector graphics under the hood (internally stored as EMF); they cannot be converted into Shapes, unfortunately.
  * enabled "Vector" support on Mac, in which a display is inserted as SVG and converted into a Shape object. Contrary to EMF on Windows, Shapes obtained from SVG cannot be "ungrouped" so that individual elements can be modified independently. User needs to set path to libgs.9.dylib in Main Settings (if default one is not correct).
  * enabled support for "Load vector graphics file" on Mac, with support for PS/EPS/PDF/SVG (no EMF at this point and for the foreseeable future). SVG is used for converting PS/EPS/PDF before insertion, which means that the inserted Shape cannot be freely decomposed into smaller elements, unfortunately. 
  * added options for setting the default height/width of the editor window in Main Settings
  * enabled support for dynamically resizable editor window on Mac (Thanks, Tsung-Ju!)
- Significant code cleaning and refactoring: all variable declarations enforced via "Option Explicit"; coding style improvements suggested by Rubberduck; redundant code made into separate Subs/Functions.
- Added SVG support on Windows (Office 365 only). See above for Mac.
- Added option for selecting between SVG, EMF via TeX2img's pdfiumdraw (.tex->.pdf->.emf conversion, fast), and EMF via TeX2img itself (direct .tex->.emf conversion, slower but potentially more robust). SVG seems to lead to the best looking outcome, but one downside is that the obtained Shape cannot be "ungrouped", so that one cannot interact with individual elements.
- Added option for selecting between SVG and EMF for conversion when inserting a vector graphics file, and added option to skip shape cleanup procedure, which may be irrelevant and not work with EMF or EPS files generated by some software.
- Added support for reading LaTeX source from images inserted from LaTeXiT: this requires downloading executables (different ones on Windows and Mac) that parse the EMF/PDF files generated by LaTeXiT to retrieve the source. Major thanks to Pierre Chatelier, the developer of LaTeXiT, for kindly implementing all the parsing code, this would have been totally impossible without his fantastic help.
- Added option to use latexmk for compilation
- Added option to always keep temporary files, even when not in debug mode.
- Fixed width and height in some forms to avoid issue where a form would appear much smaller than designed, likely due to display dpi issues
- Replaced ClipBoard copying code with something much simpler that does not rely on Windows API (Windows) and added ClipBoard support on Mac using AppleScript (Thanks, Tsung-Ju!)
- Error messages now displayed in a UserForm with a button to copy to clipboard the command that led to an error (instead of forcing copy to clipboard, which may overwrite important information without the user first giving consent)
- Removed UseUTF8 option as not using it does not appear to have a clear advantage
- Transparency no longer handled by making PNG non-transparent but by adding white fill to shape (simpler and does not rely on inserted image type)
- Fixed bug occurring when regenerating displays in a group whose 1st element is not an IguanaTex display
- Automatically replace %USERPROFILE% in paths with actual value as such types of path lead to issue in CreateProcess API call

New in IguanaTex 1.58 (October 10, 2020)
- Added Alt text to each shape, containing the whole LaTeX code. This is not a good ADA compliant substitute, but is better than nothing, and can also be used by people who don't have IguanaTeX installed and want to retrieve the code used to generate a display.
- Fixed bugs in mouse wheel support: mouse wheel was not working well on external displays with different DPI setting; cursor was moving too far, causing a silent error resulting in unresponsiveness until another mouse action reset processing
- Fixed bug where reloading the code after modifying in an external editor with external editor as default resulted in a crash.
- Fixed LaTeX engine selection Combobox style so that it is clickable (used to be possible to write text in, but this had no effect, so it was useless)
- Removed ability to use mouse wheel to select the LaTeX engine in the Combobox as it wasn't well supported (mouse wheel would remain active for that Combobox even when hovering over neighboring objects within the same frame, e.g., Bitmap/Vector selection, etc) and wasn't very useful.
- Added mouse wheel support in the template text box.

New in IguanaTex 1.57 (May 30, 2019)
- Added option to make editing in external editor the default when editing an existing display; IguanaTeX then automatically loads the relevant code in the external editor.
- Added option to directly generate code that was modified in an external editor without having to first reload it in the IguanaTeX edit window.

New in IguanaTex 1.56 (May 16, 2018)
- Added option to preserve size of the original display when modifying a display (both for single and batch edits)
- Conversion between Bitmap and Vector now preserves the size of the original display. Because Vector generation is much slower than Bitmap, and scaling factors tend to be finicky, I strongly suggest first generating and editing displays in Bitmap, and at the end convert to Vector.
- New displays will now be placed at the same position as the first selected shape among currently selected shapes, if any, and will default to the usual arbitrary (200,200) position otherwise. This is useful when working with large slides (e.g., posters), avoiding the need to move the IguanaTeX display to the region currently being worked on. Note: Placing a display somewhere relative to the currently visible portion of a slide is surprisingly not straightforward in PowerPoint, so I'll leave that for now.
- Updated the Download link for ImageMagick
- Fixed some keyboard shortcuts

New in IguanaTex 1.55 (September 28, 2017)
- Fixed bug in vector conversion by ensuring Freeforms have Fill set to Visible (Thanks: @flart; https://github.com/Jonathan-LeRoux/IguanaTex/issues/2)
- When creating new LaTeX display, automatically use font size of text if text is currently selected or cursor is in a textbox (Thanks: @itsuhane; https://github.com/itsuhane/IguanaTex/commit/ae4268b6a2a720dcdcc019e13c5c9df6bf6bb30a)
- Changed TeX2img link to version 2.0.2, as 2.0.1 was reported by some users as raising issues (Thanks: Andreas Herkle)

New in IguanaTex 1.54 (January 23, 2017)
- Added option to set path to LaTeX executables (useful in particular with portable installations of LaTeX)

New in IguanaTex 1.53 (December 12, 2016)
- Added mouse wheel support in editor window
- More robust vector graphics conversion
- Source code tracking
  * Added macro to export all modules/forms of the add-in to text files
  * Uploaded source code of all versions since v1.31 to Github: https://github.com/Jonathan-LeRoux/IguanaTex

New in IguanaTex 1.52 (November 16, 2016)
- Added function to insert a vector graphics file (.pdf/.ps/e.ps/emf) into PowerPoint as a Shape. 
  * PowerPoint already "supports" inserting .eps and .emf files, but the result is quite ugly. This function transforms the image into Shapes and does some clean up.
  * This function also extends support to .ps and .pdf files. 
  * requires TeX2img's pdfiumdraw function, already used for vector graphics support.
  * The user can choose a zoom factor to be applied prior to converting into Shapes.
  * Calibration scaling factors are provided, in case the inserted display's size does not match that of the file being inserted. This can occur on some machines depending on the resolution and dpi setting. The user can compare the original and inserted sizes, and apply the right scaling factors. These settings can be saved.
- Added option to reset format when regenerating a display. This is particularly useful when a Vector display with various colors or a mix of freeforms with fills and outlines gets regenerated: without resetting the format, the formatting of the original display as a group or of its left-most character would be applied to all parts of the new display.
- Simplified some rescalings in vector graphics support. This may result in the need for recalibrating the vector scaling factors in Main Settings.
- Improved robustness of vector graphics conversion:
  * Extended conversion of Lines into Freeforms to all Lines, not only vetical or horizontal ones.
  * Added check for presence of a Fill before discarding Outline of a Freeform

New in IguanaTex 1.51 (November 1, 2016)
- fixed a bug occurring when vector graphics display includes Line objects instead of only Freeform objects

New in IguanaTex 1.50 (October 31, 2016)
- Added vector graphics (EMF) support
  * requires TeX2img for robustness purposes (https://github.com/abenori/TeX2img, Download at: http://www.math.sci.hokudai.ac.jp/~abenori/soft/bin/TeX2img_2.0.1.zip)
  * vector graphics displays are groups of freeform objects; added ability to edit display both when clicking on the group, or when clicking on the left-most character (allowing clicking on all characters would make other things complicated)
  * formatting will (should) be preserved through editing (bevel formatting will not but it does not behave well on these shapes anyway)
  * editing vector graphics displays that have been further grouped should work as expected, except if there are groups with the same name (check the Selection Pane)
- Improvements to "Regenerate selection":
  * added batch edit mode: selected displays or all displays on selected slides can be modified simultaneously (e.g., changing latex engine, size, DPI, vector/bitmap, transparency, and simple text search & replace)
  * added progress window for batch modification, indicating "number of already processed IguanaTex displays / total number of IguanaTex displays to be processed" on each selected slide
  * added shortcuts for conversion to vector and conversion to bitmap
- Improvements to Main Settings:
  * added tunable "magic rescaling factors" in X/Y directions for vector and bitmap, to allow for the user to match exactly the size of text in a PowerPoint "Text Box". Particularly useful for vector output, which appears to be slightly warped by default. I typically use a 300pt display in Times New Roman to find a good rescaling factor, although the Bitmap output should be already pretty good, so it can be used as reference for the Vector one.
  * added clickable download links for ghostscript, ImageMagick, TeXstudio, and TeX2img
- Improvements to robustness:
  * fixed rescaling issue occurring when using computers with various DPI settings. Caveat: this results in a one time resizing inconsistency for displays created on monitors with DPI other than 96. (Note: I tried very hard to make this backward compatible, but came to the conclusion that it was not possible. If anyone figures it out, I'll be glad to include a fix.)
  * fixed bug occurring when using Debug option on PowerPoint 2016
  * fixed bug occurring when selecting a group
  * improved robustness of conversion from TexPoint template equations
- Improvements to edit window:
  * added per-display DPI setting
  * added ability for each display to remember the size of its edit window
  * added word wrap toggle, and ability for each display to remember its word wrap status
  * modified text selection behavior to be character-based instead of word-based

New in IguanaTex 1.47 (October 16, 2015)
- added global dpi setting (default value = 1200)
- added workaround to prevent crashes when editing/regenerating displays created on machines with a different locale: for example, displays created on machines with the German language pack installed will feature a transparency tag in German ("Wahr"/"Falsch"), which raises an error in previous versions of IguanaTex. This version defaults to "True" if it does not recognize the foreign keyword (and it will preserve the transparency setting if you use the same locale, even if it's not English)..

New in IguanaTex 1.46 (September 1, 2015)
- added basic support for TexPoint's "equation" displays. All TexPoint displays created using the "equation" function will be converted to inline equation, black text, transparent background.

New in IguanaTex 1.45 (July 30, 2015)
- fixed a bug occurring with grouped shapes with the same name on Powerpoint 2007 in the function that uniquifies shape names on slides
- improved multiple display support: main window now opens on top of the current PowerPoint window, even when it is not on the primary display

New in IguanaTex 1.44 (June 26, 2015)
- platex support for Japanese input

New in IguanaTex 1.43 (June 23, 2015)
- fixed bug occurring when using "Edit LaTeX display" on a single Texpoint display
- fixed bug occurring when inserting an IguanaTex display on a slide with a Content Placeholder of type other than text 
- fixed bug occurring when multiple shapes on a slide have the same name; IguanaTex will now first de-duplicate all names
- fixed bug where using "Regenerate selected displays" to regenerate displays within a group actually regenerated all displays in that group, not only the selected ones
- fixed bug where Transparency setting would be ignored for LaTeX engines other than LaTeX (DVI->PNG)
- enabled Transparency setting to be inherited from Texpoint displays

New in IguanaTex 1.42 (May 21, 2015)
- fixed a bug that could occur when using multi-byte characters
- fixed font size discrepancies in menus

New in IguanaTex 1.41 (May 17, 2015)
- added ability to launch an external editor from main window and when LaTeX compilation fails
- added buttons to change the font size in the editor and template windows, and default font size setting in the Settings menu
- added per-display and per-template setting for the temporary folder (defaults to the one set in the Settings menu)
- added file/folder selection menus in Main Settings
- prevented displays to be inserted inside content placeholders 

New in IguanaTex 1.40 (May 11, 2015) (Special thanks to Stephan Schedler for contributions to the code and ideas)
- added option to select between absolute and relative path for temporary folder (Warning: any file starting with "IguanaTex_tmp" in the temporary folder will be deleted, unless in debug mode)
- added option to read code from .tex file
- added template feature: code can be saved as template for future use, templates can be modified/removed
- added ability to convert Texpoint displays into IguanaTex displays
- added ability to regenerate multiple displays, or all displays in multiple slides, in one click (useful to convert many Texpoint equations at once, or if several IguanaTex displays include code from a separate file via \input{}, e.g., for font/color settings in the preamble)
- simplified Settings window, merging choice of "PDF->PNG vs DVI->PNG" with choice of LaTeX engine
- added per-display and per-template setting for the LaTeX engine (defaults to the one set in the Settings menu)
- added progress indicator
- size of edit window saved through "Make default"
- remember Transparency setting on a per-display basis
- added scrollbars in edit window
- keep temporary files when in debug mode
- commands copied to clipboard in debug mode (Warning: the clipboard content will be overwritten)
- fixed display size issue when using dvipng on high-dpi displays
- Changed "Create"/"Modify" to "Generate"/"ReGenerate" so that Alt-G is always the keyboard shortcut to create the display
- (minor) improved resizing behaviour
- (minor) fixed bug where time-out time was not properly indicated in message box
- (minor) some code clean up

New in IguanaTex 1.37 (November 11, 2014)
- added option for choosing between pdflatex, xelatex and lualatex (only for PDF->PNG conversion; DVI->PNG uses pdflatex with the dvi output option)
- cursor position automatically set to where it was in the LaTeX code when creating display, as well as in the template saved through "Make Default"

New in IguanaTex 1.36 (November 10, 2014)
- added new conversion process through PDF to create displays, ".tex -> .pdf -> .png", using Ghostscript for the main conversion, and ImageMagick's convert to change the DPI. Default is left to the original ".tex -> .dvi -> .png" using dvipng, as it does not require installation of extra tools. The PDF route is required for Tikz support, for example.
- added ability to set paths to Ghostscript and ImageMagick's convert, as well as a "Reset to default" button
- added UTF-8 support for input (now default), and added option to revert back to old ANSI input. This should in particular enable the use of non-latin characters, e.g. to display Chinese/Japanese/Korean.
- added option to "reset" to a given point size an existing display when editing it; changes to size and aspect ratio are then obviously lost, but rotation is preserved (as well as all other formatting)
- improved error handling
- added modifiable time out interval for latex/conversion processes to allow PowerPoint to recover from hangs in the subprocesses
- added keyboard shortcuts (Alt+...) in the main LaTeX form
- improved order of buttons when using Tab
- fixed/improved positioning of buttons in the main LaTeX form

New in IguanaTex 1.35 (September 11, 2014)
- reset the default size when creating a new display to be in "points" and to correspond to the font size in PowerPoint (the correspondence is approximate on high-DPI monitors)
- fixed a one-time bug where the first time a display is created after loading the add-in, the form to create the display does not use the default values

New in IguanaTex 1.34 (July 30, 2014)
- fixed a bug that could set a wrong width to the display
- enabled the new versions to modify displays created with old versions of IguanaTex without changing the size

New in IguanaTex 1.33 (June 28, 2014)
- fixed the ribbon tab code in order not to raise an error on PowerPoint 2003

New in IguanaTex 1.32 (June 26, 2014)
- fixed bugs with "Make Defaults"
- size textbox now hidden in Edit mode instead of greyed out
- fixed bug where "X" button would not close the window

New in IguanaTex 1.31 (June 24, 2014)
- added ability to set the temporary folder through a button in the IguanaTex tab of the ribbon
- made the add-in able to create registry keys if they do not exist, thus avoiding the need for an installer
- fixed issue with menu items in the Add-Ins tab when loading/unloading the add-in

New in IguanaTex 1.3 (June 23, 2014)
- extended group support to groups containing subgroups (any level of hierarchy is fine), again making sure that this does not break formatting, Zorder and animation settings
- fixed bug where display could only be created in a unique presentation when working with several presentations at the same time

New in IguanaTex 1.2 (June 20, 2014)
- added ability to keep all formatting and animation settings when editing an existing display
- added ability to edit displays within groups (assuming they do not have subgroups), and made sure that this does not break formatting, Zorder and animation settings
- created a dedicated ribbon, which makes it possible to add each command to the Quick Access Toolbar
- included Hammad M's modifications to be able to resize the dialog box
- fixed a display bug where the "Modify" button would sometimes be partly hidden
- added a default size of "20" points when creating a new display
- disabled the size box when modifying the display, assuming that we keep the same scaling for both height and width
- bumped the dpi to 1200
- made the code compatible with both 32-bit and 64-bit PowerPoint
